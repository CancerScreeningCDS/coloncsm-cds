<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:qdm43="urn:healthit-gov:qdm:v4_3" xmlns:qdm53="urn:healthit-gov:qdm:v5_3" xmlns:a="urn:hl7-org:cql-annotations:r1" localId="0">
   <annotation translatorVersion="3.11.0" translatorOptions="EnableAnnotations,EnableLocators,DisableListDemotion,DisableListPromotion" signatureLevel="Overloads" xsi:type="a:CqlToElmInfo"/>
   <annotation xsi:type="a:Annotation">
      <a:s r="282">
         <a:s>library FollowUp version '1.0.0'</a:s>
      </a:s>
   </annotation>
   <identifier id="FollowUp" system="http://cancerscreeningcds.github.io/crcsm-cds" version="1.0.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localId="1" localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localId="206" locator="3:1-3:26" localIdentifier="FHIR" uri="http://hl7.org/fhir" version="4.0.1">
         <annotation xsi:type="a:Annotation">
            <a:s r="206">
               <a:s>using </a:s>
               <a:s>
                  <a:s>FHIR</a:s>
               </a:s>
               <a:s> version '4.0.1'</a:s>
            </a:s>
         </annotation>
      </def>
   </usings>
   <includes>
      <def localId="207" locator="4:1-4:55" localIdentifier="FHIRHelpers" path="http://cancerscreeningcds.github.io/crcsm-cds/FHIRHelpers" version="4.0.1">
         <annotation xsi:type="a:Annotation">
            <a:s r="207">
               <a:s>include </a:s>
               <a:s>
                  <a:s>FHIRHelpers</a:s>
               </a:s>
               <a:s>  version '4.0.1' called FHIRHelpers</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="208" locator="6:1-6:52" localIdentifier="Events" path="http://cancerscreeningcds.github.io/crcsm-cds/FollowUpEvents" version="1.0.0">
         <annotation xsi:type="a:Annotation">
            <a:s r="208">
               <a:s>include </a:s>
               <a:s>
                  <a:s>FollowUpEvents</a:s>
               </a:s>
               <a:s> version '1.0.0' called Events</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="209" locator="7:1-7:54" localIdentifier="Actions" path="http://cancerscreeningcds.github.io/crcsm-cds/FollowUpActions" version="1.0.0">
         <annotation xsi:type="a:Annotation">
            <a:s r="209">
               <a:s>include </a:s>
               <a:s>
                  <a:s>FollowUpActions</a:s>
               </a:s>
               <a:s> version '1.0.0' called Actions</a:s>
            </a:s>
         </annotation>
      </def>
      <def localId="210" locator="8:1-8:56" localIdentifier="DataElements" path="http://cancerscreeningcds.github.io/crcsm-cds/DataElements" version="1.0.0">
         <annotation xsi:type="a:Annotation">
            <a:s r="210">
               <a:s>include </a:s>
               <a:s>
                  <a:s>DataElements</a:s>
               </a:s>
               <a:s> version '1.0.0' called DataElements</a:s>
            </a:s>
         </annotation>
      </def>
   </includes>
   <contexts>
      <def localId="214" locator="10:1-10:15" name="Patient"/>
   </contexts>
   <statements>
      <def localId="212" locator="10:1-10:15" name="Patient" context="Patient">
         <expression localId="213" xsi:type="SingletonFrom">
            <operand localId="211" locator="10:1-10:15" dataType="fhir:Patient" templateId="http://hl7.org/fhir/StructureDefinition/Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def localId="224" locator="26:1-34:11" name="FollowUpStoolTest" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="224">
               <a:s>define FollowUpStoolTest:
  </a:s>
               <a:s r="225">
                  <a:s>if </a:s>
                  <a:s r="228">
                     <a:s r="227">
                        <a:s r="226">
                           <a:s>Events</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="227">
                           <a:s>&quot;eve-lastTestStool&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s> is true</a:s>
                  </a:s>
                  <a:s> then
    </a:s>
                  <a:s r="229">
                     <a:s>if </a:s>
                     <a:s r="232">
                        <a:s r="231">
                           <a:s r="230">
                              <a:s>Events</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="231">
                              <a:s>&quot;eve-inconclusiveStoolTest&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> is true</a:s>
                     </a:s>
                     <a:s> then
      </a:s>
                     <a:s r="234">
                        <a:s r="233">
                           <a:s>Actions</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="234">
                           <a:s>&quot;act-repeatScreening&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>                         // TODO: (not in L2): check for pending order of any test?
    else </a:s>
                     <a:s r="235">
                        <a:s>if </a:s>
                        <a:s r="238">
                           <a:s r="237">
                              <a:s r="236">
                                 <a:s>Events</a:s>
                              </a:s>
                              <a:s>.</a:s>
                              <a:s r="237">
                                 <a:s>&quot;eve-abnormalStoolTest&quot;</a:s>
                              </a:s>
                           </a:s>
                           <a:s> is true</a:s>
                        </a:s>
                        <a:s> then
      </a:s>
                        <a:s r="240">
                           <a:s r="239">
                              <a:s>Actions</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="240">
                              <a:s>&quot;act-FollowUpColonoscopy&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
    else
      </a:s>
                        <a:s r="242">
                           <a:s r="241">
                              <a:s>Actions</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="242">
                              <a:s>&quot;act-continueRoutineScreening&quot;</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s r="243">
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="225" locator="27:3-34:11" xsi:type="If">
            <condition localId="228" locator="27:6-27:39" xsi:type="IsTrue">
               <operand localId="227" locator="27:6-27:31" name="eve-lastTestStool" libraryName="Events" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="229" locator="28:5-33:44" xsi:type="If">
               <condition localId="232" locator="28:8-28:49" xsi:type="IsTrue">
                  <operand localId="231" locator="28:8-28:41" name="eve-inconclusiveStoolTest" libraryName="Events" xsi:type="ExpressionRef"/>
               </condition>
               <then localId="234" locator="29:7-29:35" name="act-repeatScreening" libraryName="Actions" xsi:type="ExpressionRef"/>
               <else localId="235" locator="30:10-33:44" xsi:type="If">
                  <condition localId="238" locator="30:13-30:50" xsi:type="IsTrue">
                     <operand localId="237" locator="30:13-30:42" name="eve-abnormalStoolTest" libraryName="Events" xsi:type="ExpressionRef"/>
                  </condition>
                  <then localId="240" locator="31:7-31:39" name="act-FollowUpColonoscopy" libraryName="Actions" xsi:type="ExpressionRef"/>
                  <else localId="242" locator="33:7-33:44" name="act-continueRoutineScreening" libraryName="Actions" xsi:type="ExpressionRef"/>
               </else>
            </then>
            <else localId="244" xsi:type="As">
               <operand localId="243" locator="34:8-34:11" xsi:type="Null"/>
               <asTypeSpecifier localId="245" xsi:type="TupleTypeSpecifier">
                  <element localId="246" name="code">
                     <elementType localId="247" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="248" name="reason">
                     <elementType localId="249" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="250" name="documentation">
                     <elementType localId="251" xsi:type="TupleTypeSpecifier">
                        <element localId="252" name="label">
                           <elementType localId="253" name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </element>
                     </elementType>
                  </element>
               </asTypeSpecifier>
            </else>
         </expression>
      </def>
      <def localId="256" locator="36:1-41:11" name="FollowUpFlexSig" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="256">
               <a:s>define FollowUpFlexSig:
  </a:s>
               <a:s r="257">
                  <a:s>if </a:s>
                  <a:s r="260">
                     <a:s r="259">
                        <a:s r="258">
                           <a:s>Events</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="259">
                           <a:s>&quot;eve-lastTestFlexSig&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s> is true</a:s>
                  </a:s>
                  <a:s> then
    </a:s>
                  <a:s r="261">
                     <a:s>if </a:s>
                     <a:s r="264">
                        <a:s r="263">
                           <a:s r="262">
                              <a:s>Events</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="263">
                              <a:s>&quot;eve-abnormalFlexSig&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> is true</a:s>
                     </a:s>
                     <a:s> then
      </a:s>
                     <a:s r="266">
                        <a:s r="265">
                           <a:s>Actions</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="266">
                           <a:s>&quot;act-FollowUpColonoscopy&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>
    else </a:s>
                     <a:s r="268">
                        <a:s r="267">
                           <a:s>Actions</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="268">
                           <a:s>&quot;act-continueRoutineScreeningDirectViz&quot;</a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s r="269"> 
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="257" locator="37:3-41:11" xsi:type="If">
            <condition localId="260" locator="37:6-37:41" xsi:type="IsTrue">
               <operand localId="259" locator="37:6-37:33" name="eve-lastTestFlexSig" libraryName="Events" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="261" locator="38:5-40:56" xsi:type="If">
               <condition localId="264" locator="38:8-38:43" xsi:type="IsTrue">
                  <operand localId="263" locator="38:8-38:35" name="eve-abnormalFlexSig" libraryName="Events" xsi:type="ExpressionRef"/>
               </condition>
               <then localId="266" locator="39:7-39:39" name="act-FollowUpColonoscopy" libraryName="Actions" xsi:type="ExpressionRef"/>
               <else localId="268" locator="40:10-40:56" name="act-continueRoutineScreeningDirectViz" libraryName="Actions" xsi:type="ExpressionRef"/>
            </then>
            <else localId="270" xsi:type="As">
               <operand localId="269" locator="41:8-41:11" xsi:type="Null"/>
               <asTypeSpecifier localId="271" xsi:type="TupleTypeSpecifier">
                  <element localId="272" name="code">
                     <elementType localId="273" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="274" name="reason">
                     <elementType localId="275" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="276" name="documentation">
                     <elementType localId="277" xsi:type="TupleTypeSpecifier">
                        <element localId="278" name="label">
                           <elementType localId="279" name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </element>
                     </elementType>
                  </element>
               </asTypeSpecifier>
            </else>
         </expression>
      </def>
      <def localId="282" locator="47:1-55:11" name="FollowUpCTColonography" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="282">
               <a:s>// TODO: (not in L2): split abnormal and malignant findings. Malignant -> oncology referral
// TODO: (not in L2): add check for recommended interval from endoscopist when no abnormal findings?
// TODO: (not in L2): add repeat testing/consult with endoscopist for inconclusive flex sig?
// TODO: (not in L2): add explicit normal finding?

define FollowUpCTColonography:
  </a:s>
               <a:s r="283">
                  <a:s>if </a:s>
                  <a:s r="286">
                     <a:s r="285">
                        <a:s r="284">
                           <a:s>Events</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="285">
                           <a:s>&quot;eve-lastTestCTC&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s> is true</a:s>
                  </a:s>
                  <a:s> then
    </a:s>
                  <a:s r="287">
                     <a:s>if </a:s>
                     <a:s r="289">
                        <a:s r="288">
                           <a:s>Events</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="289">
                           <a:s>&quot;eve-inconclusiveCTColonography&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s> then       
      </a:s>
                     <a:s r="291">
                        <a:s r="290">
                           <a:s>Actions</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="291">
                           <a:s>&quot;act-repeatScreening&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s>                       // TODO: (not in L2): check for pending order of any test?
    else </a:s>
                     <a:s r="292">
                        <a:s>if </a:s>
                        <a:s r="294">
                           <a:s r="293">
                              <a:s>Events</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="294">
                              <a:s>&quot;eve-abnormalCTColonography&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s> then
      </a:s>
                        <a:s r="296">
                           <a:s r="295">
                              <a:s>Actions</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="296">
                              <a:s>&quot;act-FollowUpColonoscopy&quot;</a:s>
                           </a:s>
                        </a:s>
                        <a:s>
    else
      </a:s>
                        <a:s r="298">
                           <a:s r="297">
                              <a:s>Actions</a:s>
                           </a:s>
                           <a:s>.</a:s>
                           <a:s r="298">
                              <a:s>&quot;act-continueRoutineScreeningDirectViz&quot;</a:s>
                           </a:s>
                        </a:s>
                     </a:s>
                  </a:s>
                  <a:s r="299">
  else null</a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="283" locator="48:3-55:11" xsi:type="If">
            <condition localId="286" locator="48:6-48:37" xsi:type="IsTrue">
               <operand localId="285" locator="48:6-48:29" name="eve-lastTestCTC" libraryName="Events" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="287" locator="49:5-54:53" xsi:type="If">
               <condition localId="289" locator="49:8-49:46" name="eve-inconclusiveCTColonography" libraryName="Events" xsi:type="ExpressionRef"/>
               <then localId="291" locator="50:7-50:35" name="act-repeatScreening" libraryName="Actions" xsi:type="ExpressionRef"/>
               <else localId="292" locator="51:10-54:53" xsi:type="If">
                  <condition localId="294" locator="51:13-51:47" name="eve-abnormalCTColonography" libraryName="Events" xsi:type="ExpressionRef"/>
                  <then localId="296" locator="52:7-52:39" name="act-FollowUpColonoscopy" libraryName="Actions" xsi:type="ExpressionRef"/>
                  <else localId="298" locator="54:7-54:53" name="act-continueRoutineScreeningDirectViz" libraryName="Actions" xsi:type="ExpressionRef"/>
               </else>
            </then>
            <else localId="300" xsi:type="As">
               <operand localId="299" locator="55:8-55:11" xsi:type="Null"/>
               <asTypeSpecifier localId="301" xsi:type="TupleTypeSpecifier">
                  <element localId="302" name="code">
                     <elementType localId="303" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="304" name="reason">
                     <elementType localId="305" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                  </element>
                  <element localId="306" name="documentation">
                     <elementType localId="307" xsi:type="TupleTypeSpecifier">
                        <element localId="308" name="label">
                           <elementType localId="309" name="t:String" xsi:type="NamedTypeSpecifier"/>
                        </element>
                     </elementType>
                  </element>
               </asTypeSpecifier>
            </else>
         </expression>
      </def>
      <def localId="216" locator="16:1-24:19" name="flow-FollowUp" context="Patient" accessLevel="Public">
         <annotation xsi:type="a:Annotation">
            <a:s r="216">
               <a:s>//------------------------------------------------------------------------------
// RECOMMENDATIONS
//------------------------------------------------------------------------------

define &quot;flow-FollowUp&quot;:
  </a:s>
               <a:s r="217">
                  <a:s>if </a:s>
                  <a:s r="220">
                     <a:s r="219">
                        <a:s r="218">
                           <a:s>Events</a:s>
                        </a:s>
                        <a:s>.</a:s>
                        <a:s r="219">
                           <a:s>&quot;eve-lastTestColonoscopy&quot;</a:s>
                        </a:s>
                     </a:s>
                     <a:s> is true</a:s>
                  </a:s>
                  <a:s r="221"> then {}
  else
    </a:s>
                  <a:s r="313">
                     <a:s r="222">
                        <a:s>{
      </a:s>
                        <a:s r="254">
                           <a:s>FollowUpStoolTest</a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="280">
                           <a:s>FollowUpFlexSig</a:s>
                        </a:s>
                        <a:s>,
      </a:s>
                        <a:s r="310">
                           <a:s>FollowUpCTColonography</a:s>
                        </a:s>
                        <a:s>
    }</a:s>
                     </a:s>
                     <a:s>
    except </a:s>
                     <a:s r="311">
                        <a:s r="312">{ null }</a:s>
                     </a:s>
                  </a:s>
               </a:s>
            </a:s>
         </annotation>
         <expression localId="217" locator="17:3-24:19" xsi:type="If">
            <condition localId="220" locator="17:6-17:45" xsi:type="IsTrue">
               <operand localId="219" locator="17:6-17:37" name="eve-lastTestColonoscopy" libraryName="Events" xsi:type="ExpressionRef"/>
            </condition>
            <then localId="221" locator="17:52-17:53" xsi:type="List"/>
            <else localId="313" locator="19:5-24:19" xsi:type="Except">
               <operand localId="222" locator="19:5-23:5" xsi:type="List">
                  <element localId="254" locator="20:7-20:23" name="FollowUpStoolTest" xsi:type="ExpressionRef"/>
                  <element localId="280" locator="21:7-21:21" name="FollowUpFlexSig" xsi:type="ExpressionRef"/>
                  <element localId="310" locator="22:7-22:28" name="FollowUpCTColonography" xsi:type="ExpressionRef"/>
               </operand>
               <operand localId="314" xsi:type="Query">
                  <source localId="315" alias="X">
                     <expression localId="311" locator="24:12-24:19" xsi:type="List">
                        <element localId="312" locator="24:14-24:17" xsi:type="Null"/>
                     </expression>
                  </source>
                  <return localId="316" distinct="false">
                     <expression localId="318" xsi:type="As">
                        <operand localId="317" name="X" xsi:type="AliasRef"/>
                        <asTypeSpecifier localId="319" xsi:type="TupleTypeSpecifier">
                           <element localId="320" name="code">
                              <elementType localId="321" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                           </element>
                           <element localId="322" name="reason">
                              <elementType localId="323" name="t:Code" xsi:type="NamedTypeSpecifier"/>
                           </element>
                           <element localId="324" name="documentation">
                              <elementType localId="325" xsi:type="TupleTypeSpecifier">
                                 <element localId="326" name="label">
                                    <elementType localId="327" name="t:String" xsi:type="NamedTypeSpecifier"/>
                                 </element>
                              </elementType>
                           </element>
                        </asTypeSpecifier>
                     </expression>
                  </return>
               </operand>
            </else>
         </expression>
      </def>
   </statements>
</library>
